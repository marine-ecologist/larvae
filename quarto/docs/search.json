[
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "",
    "section": "",
    "text": "Year\nSource\n\n\n\n\n2020\n2.2.OTI_Pools_Culture_2020\n\n\n2020\n2.1.Witstari_Jetty_Pools_Culture_2020.csv\n\n\n2021\nRearingLarvaeData_2021.xlsx\n\n\n2022\nLarval Density Database Lizard Is 2022.xlsx\n\n\n2023\nDATA_MC_Collection_Cultures.xlsx\n\n\n2024\nDATA_MC_SpawningOps_DataSheets_Nov-Dec2024.xlsx\n\n\n\nAccessible via AIMS share drive:\n\n\n\nlibrary(tidyverse)\nlibrary(janitor)\n\nculture_pools_2020 &lt;-\n  rbind(\n    # read_csv(\"data/2020/2.1.Witstari_Jetty_Pools_Culture_2020.csv\", show_col_types = FALSE) |&gt;\n    # clean_names() |&gt;\n    # mutate(volume = pool_bin_volume/1000, # note this must be ml not l\n    #        density = larvae_ml*1000,\n    #        id=pool,\n    #        date = as.POSIXct(date, format = \"%d/%m/%y\")) |&gt;\n    # mutate(spawndate = as.POSIXct(\"5/12/20\", format = \"%d/%m/%y\")) |&gt; # assume 5th Dec?\n    # mutate(days = as.numeric(as.POSIXct(date) - spawndate)) |&gt;\n    # select(date, days, id, replicate, density, volume) |&gt;\n    # mutate(id=as.factor(id),\n    #        replicate=as.factor(replicate)\n    #        ) |&gt;\n    # mutate(year = 2020, density=as.numeric(density)),\n\n    read_csv(\"data/2020/2.2.OTI_Pools_Culture_2020.csv\", show_col_types = FALSE) |&gt;\n      clean_names() |&gt;\n      drop_na() |&gt;\n      mutate(\n        date =  as.POSIXct(date, format = \"%d/%m/%y\"),\n        volume = pool_bin_volume_ml/1000,\n        density = larvae_ml * 1000,\n        id = pool,\n        spawndate = case_when(\n          pool == 2 ~ as.POSIXct(\"05/12/20\", format = \"%d/%m/%y\"),\n          pool == 4 ~ as.POSIXct(\"04/12/20\", format = \"%d/%m/%y\"),\n          TRUE ~ NA_POSIXct_\n        )\n      ) |&gt;\n      mutate(days = as.numeric(date - spawndate)/(60*60*24)) |&gt;\n      select(date, days, id, replicate, density, volume) |&gt;\n      mutate(id=as.factor(id),\n             replicate=as.factor(replicate)\n      ) |&gt;\n      mutate(year = 2020, density=as.numeric(density))\n  ) |&gt;\n  mutate(total = density * volume) |&gt;\n  filter(density &gt; 1000) |&gt;\n  filter(volume &lt; 100)\n\n\n\n\nculture_pools_2021 &lt;- read_excel(\"data/2021/RearingLarvaeData_2021.xlsx\", sheet=\"LarvaeDensity_Rearing\") |&gt;\n  clean_names() |&gt;\n  mutate(days =  as.numeric(sampling_date-spawning_date),\n         date=as.POSIXct(sampling_date, format = \"%d/%m/%Y\")) |&gt;\n  rename(id = pool_id) |&gt;\n  rename(density = larvae_number_per_l) |&gt;\n  rename(volume = pool_volume_liter) |&gt;\n  select(date, days, id, replicate, density, volume) |&gt;\n  mutate(across(where(is.character), ~na_if(., \"NA\"))) |&gt;\n  na.omit() |&gt;\n  mutate(id=as.factor(id),\n         replicate=as.factor(replicate)\n  ) |&gt;\n  mutate(year = 2021, density=as.numeric(density)) |&gt;\n  mutate(total = density * volume)\n\n\nculture_pools_2022 &lt;- read_excel(\"data/2022/Larval Density Database Lizard Is 2022.xlsx\", sheet = \"Culturing\") |&gt;\n  janitor::clean_names() |&gt;\n  rename(\n    volume = pool_volume,\n    replicate = sample_replicate,\n    days=time,\n    id=pool_no\n  ) |&gt;\n  mutate(\n    density = suppressWarnings(as.numeric(larvae_per_ml)) *1000\n  ) |&gt;\n  select(date, days, id, replicate, density, volume) |&gt;\n  na.omit() |&gt;\n  mutate(id=as.factor(id),\n         replicate=as.factor(replicate),\n         date=as.POSIXct(date,format = \"%d/%m/%Y\")\n  ) |&gt;\n  mutate(year = 2022, density=as.numeric(density)) |&gt;\n  mutate(total = density * volume)\n\n\nculture_pools_2023 &lt;- read_excel(\"data/2023/DATA_MC_Collection_Cultures.xlsx\", sheet=\"data_CultureClean\") |&gt;\n  clean_names() |&gt;\n  mutate(date = date_sample,\n         days =  as.numeric(date_sample-date_collection)/(60*60*24)) |&gt;\n  rename(volume = culture_volume_l) |&gt;\n  rename(sample_volume = sample_volume_m_l) |&gt;\n  rename(id = pool_tank_number) |&gt;\n  rename(replicate =  sample_number) |&gt;\n  rename(density = sample_volume) |&gt;\n  mutate(across(where(is.character), ~na_if(., \"NA\"))) |&gt;\n  mutate(density = as.numeric(density)) |&gt;\n  select(date, days, id, replicate, density, volume) |&gt;\n  mutate(id=as.factor(id),\n         replicate=as.factor(replicate)\n  ) |&gt;\n  mutate(year = 2023, density=as.numeric(density), volume=as.numeric(volume)) |&gt;\n  mutate(total = density * volume)\n\n\n\nculture_pools_2024 &lt;- read_excel(\"data/2024/DATA_MC_SpawningOps_DataSheets_Nov-Dec2024.xlsx\", sheet=\"data_LarvCulture1-6_CLEAN\") |&gt;\n  clean_names() |&gt;\n  filter(volume_culture_l == 9280.0) |&gt;\n  mutate(\n    sampling_date = suppressWarnings(\n      if_else(\n        grepl(\"^\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}$\", sampling_date),\n        as.Date(sampling_date, format = \"%d/%m/%Y\"),\n        as.Date(as.numeric(sampling_date), origin = \"1899-12-30\")\n      )\n    )\n  ) |&gt;\n  mutate(\n    sampling_date = as.Date(sampling_date, format = \"%d/%m/%Y\"),\n    days = as.numeric(sampling_date - as.Date(spawning_date)),\n    replicate = pool_id,\n    id = sample_id,\n  ) |&gt;\n  mutate(density = larvae_count_perml * 1000) |&gt;\n  mutate(volume = volume_culture_l,\n         date = sampling_date) |&gt;\n  select(date, days, id, replicate, density, volume) |&gt;\n  mutate(id=as.factor(id),\n         replicate=as.factor(replicate)\n  ) |&gt;\n  mutate(year = 2024, density=as.numeric(density), days = as.factor(days), total=volume*density)\n\nremove_outliers_se &lt;- function(df, se_mult = 2) {\n  se &lt;- sd(df$density, na.rm = TRUE) / sqrt(sum(!is.na(df$density)))\n  m &lt;- mean(df$density, na.rm = TRUE)\n  dplyr::filter(df, abs(density - m) &lt;= se_mult * se)\n}\n\n\nculture_pools &lt;- rbind(culture_pools_2020,\n                       culture_pools_2021,\n                       culture_pools_2022,\n                       culture_pools_2023,\n                       culture_pools_2024) |&gt;\n  mutate(days=as.factor(days),\n         year=as.factor(year),\n         volume = as.numeric(volume)) |&gt;\n  drop_na(density)\n\n# pool-mean\nculture_pools_mean_id &lt;- culture_pools |&gt;\n  group_by(year, days, id) |&gt;\n  summarise(density = mean(density), .groups = \"drop\")\n\n# day-mean\nculture_pools_mean &lt;- culture_pools_mean_id |&gt;\n  group_by(year, days) |&gt;\n  summarise(\n    density_mean = round(mean(density),0),\n    n = n(),\n    sd = round(sd(density),1),\n    se = round(sd(density) / sqrt(n()),1),\n    ci95 = round(qt(0.975, df = n() - 1) * sd(density) / sqrt(n()),1),\n    .groups = \"drop\"\n  ) |&gt; rename(density = density_mean)\n\nculture_pools_sum &lt;- culture_pools |&gt;\n  group_by(year, days) |&gt;\n  summarise(\n    total = round(sum(density),0),\n    sd = round(sd(density),1),\n    se = round(sd / sqrt(n()),1),\n    ci95 = round(qt(0.975, df = n() - 1) * se,1),\n    .groups = \"drop\"\n  )"
  },
  {
    "objectID": "data.html#data-sources-per-year",
    "href": "data.html#data-sources-per-year",
    "title": "",
    "section": "",
    "text": "Year\nSource\n\n\n\n\n2020\n2.2.OTI_Pools_Culture_2020\n\n\n2020\n2.1.Witstari_Jetty_Pools_Culture_2020.csv\n\n\n2021\nRearingLarvaeData_2021.xlsx\n\n\n2022\nLarval Density Database Lizard Is 2022.xlsx\n\n\n2023\nDATA_MC_Collection_Cultures.xlsx\n\n\n2024\nDATA_MC_SpawningOps_DataSheets_Nov-Dec2024.xlsx\n\n\n\nAccessible via AIMS share drive:\n\n\n\nlibrary(tidyverse)\nlibrary(janitor)\n\nculture_pools_2020 &lt;-\n  rbind(\n    # read_csv(\"data/2020/2.1.Witstari_Jetty_Pools_Culture_2020.csv\", show_col_types = FALSE) |&gt;\n    # clean_names() |&gt;\n    # mutate(volume = pool_bin_volume/1000, # note this must be ml not l\n    #        density = larvae_ml*1000,\n    #        id=pool,\n    #        date = as.POSIXct(date, format = \"%d/%m/%y\")) |&gt;\n    # mutate(spawndate = as.POSIXct(\"5/12/20\", format = \"%d/%m/%y\")) |&gt; # assume 5th Dec?\n    # mutate(days = as.numeric(as.POSIXct(date) - spawndate)) |&gt;\n    # select(date, days, id, replicate, density, volume) |&gt;\n    # mutate(id=as.factor(id),\n    #        replicate=as.factor(replicate)\n    #        ) |&gt;\n    # mutate(year = 2020, density=as.numeric(density)),\n\n    read_csv(\"data/2020/2.2.OTI_Pools_Culture_2020.csv\", show_col_types = FALSE) |&gt;\n      clean_names() |&gt;\n      drop_na() |&gt;\n      mutate(\n        date =  as.POSIXct(date, format = \"%d/%m/%y\"),\n        volume = pool_bin_volume_ml/1000,\n        density = larvae_ml * 1000,\n        id = pool,\n        spawndate = case_when(\n          pool == 2 ~ as.POSIXct(\"05/12/20\", format = \"%d/%m/%y\"),\n          pool == 4 ~ as.POSIXct(\"04/12/20\", format = \"%d/%m/%y\"),\n          TRUE ~ NA_POSIXct_\n        )\n      ) |&gt;\n      mutate(days = as.numeric(date - spawndate)/(60*60*24)) |&gt;\n      select(date, days, id, replicate, density, volume) |&gt;\n      mutate(id=as.factor(id),\n             replicate=as.factor(replicate)\n      ) |&gt;\n      mutate(year = 2020, density=as.numeric(density))\n  ) |&gt;\n  mutate(total = density * volume) |&gt;\n  filter(density &gt; 1000) |&gt;\n  filter(volume &lt; 100)\n\n\n\n\nculture_pools_2021 &lt;- read_excel(\"data/2021/RearingLarvaeData_2021.xlsx\", sheet=\"LarvaeDensity_Rearing\") |&gt;\n  clean_names() |&gt;\n  mutate(days =  as.numeric(sampling_date-spawning_date),\n         date=as.POSIXct(sampling_date, format = \"%d/%m/%Y\")) |&gt;\n  rename(id = pool_id) |&gt;\n  rename(density = larvae_number_per_l) |&gt;\n  rename(volume = pool_volume_liter) |&gt;\n  select(date, days, id, replicate, density, volume) |&gt;\n  mutate(across(where(is.character), ~na_if(., \"NA\"))) |&gt;\n  na.omit() |&gt;\n  mutate(id=as.factor(id),\n         replicate=as.factor(replicate)\n  ) |&gt;\n  mutate(year = 2021, density=as.numeric(density)) |&gt;\n  mutate(total = density * volume)\n\n\nculture_pools_2022 &lt;- read_excel(\"data/2022/Larval Density Database Lizard Is 2022.xlsx\", sheet = \"Culturing\") |&gt;\n  janitor::clean_names() |&gt;\n  rename(\n    volume = pool_volume,\n    replicate = sample_replicate,\n    days=time,\n    id=pool_no\n  ) |&gt;\n  mutate(\n    density = suppressWarnings(as.numeric(larvae_per_ml)) *1000\n  ) |&gt;\n  select(date, days, id, replicate, density, volume) |&gt;\n  na.omit() |&gt;\n  mutate(id=as.factor(id),\n         replicate=as.factor(replicate),\n         date=as.POSIXct(date,format = \"%d/%m/%Y\")\n  ) |&gt;\n  mutate(year = 2022, density=as.numeric(density)) |&gt;\n  mutate(total = density * volume)\n\n\nculture_pools_2023 &lt;- read_excel(\"data/2023/DATA_MC_Collection_Cultures.xlsx\", sheet=\"data_CultureClean\") |&gt;\n  clean_names() |&gt;\n  mutate(date = date_sample,\n         days =  as.numeric(date_sample-date_collection)/(60*60*24)) |&gt;\n  rename(volume = culture_volume_l) |&gt;\n  rename(sample_volume = sample_volume_m_l) |&gt;\n  rename(id = pool_tank_number) |&gt;\n  rename(replicate =  sample_number) |&gt;\n  rename(density = sample_volume) |&gt;\n  mutate(across(where(is.character), ~na_if(., \"NA\"))) |&gt;\n  mutate(density = as.numeric(density)) |&gt;\n  select(date, days, id, replicate, density, volume) |&gt;\n  mutate(id=as.factor(id),\n         replicate=as.factor(replicate)\n  ) |&gt;\n  mutate(year = 2023, density=as.numeric(density), volume=as.numeric(volume)) |&gt;\n  mutate(total = density * volume)\n\n\n\nculture_pools_2024 &lt;- read_excel(\"data/2024/DATA_MC_SpawningOps_DataSheets_Nov-Dec2024.xlsx\", sheet=\"data_LarvCulture1-6_CLEAN\") |&gt;\n  clean_names() |&gt;\n  filter(volume_culture_l == 9280.0) |&gt;\n  mutate(\n    sampling_date = suppressWarnings(\n      if_else(\n        grepl(\"^\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}$\", sampling_date),\n        as.Date(sampling_date, format = \"%d/%m/%Y\"),\n        as.Date(as.numeric(sampling_date), origin = \"1899-12-30\")\n      )\n    )\n  ) |&gt;\n  mutate(\n    sampling_date = as.Date(sampling_date, format = \"%d/%m/%Y\"),\n    days = as.numeric(sampling_date - as.Date(spawning_date)),\n    replicate = pool_id,\n    id = sample_id,\n  ) |&gt;\n  mutate(density = larvae_count_perml * 1000) |&gt;\n  mutate(volume = volume_culture_l,\n         date = sampling_date) |&gt;\n  select(date, days, id, replicate, density, volume) |&gt;\n  mutate(id=as.factor(id),\n         replicate=as.factor(replicate)\n  ) |&gt;\n  mutate(year = 2024, density=as.numeric(density), days = as.factor(days), total=volume*density)\n\nremove_outliers_se &lt;- function(df, se_mult = 2) {\n  se &lt;- sd(df$density, na.rm = TRUE) / sqrt(sum(!is.na(df$density)))\n  m &lt;- mean(df$density, na.rm = TRUE)\n  dplyr::filter(df, abs(density - m) &lt;= se_mult * se)\n}\n\n\nculture_pools &lt;- rbind(culture_pools_2020,\n                       culture_pools_2021,\n                       culture_pools_2022,\n                       culture_pools_2023,\n                       culture_pools_2024) |&gt;\n  mutate(days=as.factor(days),\n         year=as.factor(year),\n         volume = as.numeric(volume)) |&gt;\n  drop_na(density)\n\n# pool-mean\nculture_pools_mean_id &lt;- culture_pools |&gt;\n  group_by(year, days, id) |&gt;\n  summarise(density = mean(density), .groups = \"drop\")\n\n# day-mean\nculture_pools_mean &lt;- culture_pools_mean_id |&gt;\n  group_by(year, days) |&gt;\n  summarise(\n    density_mean = round(mean(density),0),\n    n = n(),\n    sd = round(sd(density),1),\n    se = round(sd(density) / sqrt(n()),1),\n    ci95 = round(qt(0.975, df = n() - 1) * sd(density) / sqrt(n()),1),\n    .groups = \"drop\"\n  ) |&gt; rename(density = density_mean)\n\nculture_pools_sum &lt;- culture_pools |&gt;\n  group_by(year, days) |&gt;\n  summarise(\n    total = round(sum(density),0),\n    sd = round(sd(density),1),\n    se = round(sd / sqrt(n()),1),\n    ci95 = round(qt(0.975, df = n() - 1) * se,1),\n    .groups = \"drop\"\n  )"
  },
  {
    "objectID": "ponds.html",
    "href": "ponds.html",
    "title": "",
    "section": "",
    "text": "Inset larval culture locations per year\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLarval culture locations GBR-wide"
  }
]